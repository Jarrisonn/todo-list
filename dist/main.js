(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(15),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,"*,*::before,*::after{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.project-container{\r\n    margin-bottom: 5rem;\r\n}\r\n\r\n#project-list{\r\n    display:flex;\r\n    gap: 10rem;\r\n}\r\n\r\n.selected{\r\n    background-color: green;\r\n}\r\nbutton{\r\n    width: 5rem;\r\n    height:2rem;\r\n}\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;AACA;IACI,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,uBAAuB;AAC3B;AACA;IACI,WAAW;IACX,WAAW;AACf;AACA;IACI,aAAa;IACb,sBAAsB;AAC1B",sourcesContent:["*,*::before,*::after{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n.project-container{\r\n    margin-bottom: 5rem;\r\n}\r\n\r\n#project-list{\r\n    display:flex;\r\n    gap: 10rem;\r\n}\r\n\r\n.selected{\r\n    background-color: green;\r\n}\r\nbutton{\r\n    width: 5rem;\r\n    height:2rem;\r\n}\r\nform{\r\n    display: flex;\r\n    flex-direction: column;\r\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var i=0;i<e.length;i++){var s=[].concat(e[i]);r&&o[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a=[],c=!0,i=!1;try{for(n=n.call(e);!(c=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);c=!0);}catch(e){i=!0,o=e}finally{try{c||null==n.return||n.return()}finally{if(i)throw o}}return a}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],c=o[3];if(!c)return a;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(c)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),l="/*# ".concat(s," */"),d=c.sources.map((function(e){return"/*# sourceURL=".concat(c.sourceRoot||"").concat(e," */")}));return[a].concat(d).concat([l]).join("\n")}return[a].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],l=r.base?s[0]+r.base:s[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var p=n(u),m={css:s[1],media:s[2],sourceMap:s[3]};-1!==p?(t[p].references++,t[p].updater(m)):t.push({identifier:u,updater:o(m,r),references:1}),c.push(u)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var s=r(e,o),l=0;l<a.length;l++){var d=n(a[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r=n.css,o=n.media,a=n.sourceMap;o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),c=n.n(a),i=n(565),s=n.n(i),l=n(216),d=n.n(l),u=n(589),p=n.n(u),m=n(426),h={};h.styleTagTransform=p(),h.setAttributes=s(),h.insert=c().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=d(),t()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const f=document.querySelector(".project-container"),A=document.querySelector(".todo-container"),v=document.querySelector(".create-todo");class C{constructor(e,t,n,r,o,a,c){this.title=e,this.description=t,this.creationDate=n,this.dueDate=r,this.priority=o,this.status=a,this.project=c}changeStatus(){this.status=!this.status}}class b{constructor(e,t,n){this.name=e,this.todosList=t,this.selected=n}select(){this.selected=!0,w(),T()}deSelect(){this.selected=!1}}const y=new C("Title","desc",new Date,"Monday 10th","High",!1,"default"),g=new C("Title1","desc1",new Date,"Tuesday 11th","Low",!1,"secondList"),E=new C("Title2","desc1",new Date,"Tuesday 11th","Low",!1,"thirdList");let x=[new b("default",[y],!0),new b("secondProject",[g,y,y],!1),new b("thirdProject",[E],!1)];const T=()=>{x.forEach((e=>{!0===e.selected&&e.todosList.forEach((t=>{const n=document.createElement("ul"),r=document.createElement("h2"),o=document.createElement("h2"),a=document.createElement("h3"),c=document.createElement("h3"),i=document.createElement("h3");r.innerText=e.name,o.innerText=t.title,a.innerText=t.description,c.innerText=t.dueDate,i.innerText=t.priority,n.classList.add("todo"),n.appendChild(r),n.appendChild(o),n.appendChild(a),n.appendChild(c),n.appendChild(i),A.appendChild(n)}))}))};T();const w=()=>{A.innerHTML=""},I=()=>{f.innerHTML="";const e=document.createElement("ul");e.classList.add("project-list"),x.forEach((t=>{const n=document.createElement("h2");n.innerText=t.name,e.appendChild(n),f.appendChild(e),t.selected?n.classList.add("selected"):t.selected||n.classList.remove("selected")}))};I();const L=()=>{const e=document.querySelector(".project-list");e.addEventListener("click",(t=>{e.childNodes.forEach((e=>{e.classList.remove("selected")})),t.target.classList.add("selected"),j(t.target.innerText),S(t.target.innerText)}))};L();const S=e=>{x.forEach((t=>{e===t.name?t.select():e!==t.name&&t.deSelect()}))},j=e=>{x.forEach((t=>{e!==t.name&&t.deSelect()}))},M=()=>{const e=document.createElement("button");e.innerText="Create a new Project!",e.addEventListener("click",(()=>{const e=document.createElement("form"),t=document.createElement("input"),n=document.createElement("label"),r=document.createElement("button");n.htmlFor="name",n.innerText="Please enter a name for your project \n",t.name="name",r.innerText="Submit",e.appendChild(n),e.appendChild(t),e.appendChild(r),A.appendChild(e),r.addEventListener("click",(e=>{e.preventDefault(),P(t.value)}))})),f.appendChild(e)};M();const P=e=>{const t=new b(e,[],!1);x.push(t),console.log(x),I(),L(),M()};(()=>{const e=document.createElement("button");e.innerText="Add a new todo!",e.addEventListener("click",(()=>{let e=void x.forEach((e=>{if(e.selected)return console.log(e.name),e.name}));console.log(e);const t=document.createElement("form"),n=document.createElement("input"),r=document.createElement("label");r.innerText="Please enter a title for the todo";const o=document.createElement("input"),a=document.createElement("label");a.innerText="Please enter a description of the todo";const c=document.createElement("input");c.type="date";const i=document.createElement("label");i.innerText="Please enter the due date of the todo";const s=document.createElement("input"),l=document.createElement("label");l.innerText="Please enter the priority of the todo";const d=document.createElement("input"),u=document.createElement("label");u.innerText="Please enter the name of the project for the todo to go on ";const p=document.createElement("button");p.innerText="Submit new Todo!",p.addEventListener("click",(e=>{e.preventDefault(),B(n.value,o.value,c.valueAsDate,s.value,d.value),v.removeChild(t)})),t.appendChild(r),t.appendChild(n),t.appendChild(a),t.appendChild(o),t.appendChild(i),t.appendChild(c),t.appendChild(l),t.appendChild(s),t.appendChild(u),t.appendChild(d),t.appendChild(p),v.appendChild(t)})),v.appendChild(e)})();const B=(e,t,n,r,o)=>{const a=new C(e,t,new Date,n,r,!1,o);x.forEach((e=>{e.name===o&&e.todosList.push(a)})),console.log(x),w(),T()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,