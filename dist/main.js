(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([e.id,"*,*::before,*::after{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    \r\n}\r\nbody{\r\n    \r\n    background-color: #ccc;\r\n}\r\n.project-container{\r\n    font-family: 'Open Sans';\r\n    font-size: 2.5rem;\r\n    margin-top: 1.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n    flex-direction: column;\r\n    text-align: center;\r\n}\r\n\r\n#project-list{\r\n    display:flex;\r\n    gap: 10rem;\r\n}\r\n\r\n.selected{\r\n    background-color: green;\r\n}\r\nbutton{\r\n    font-family: 'Open Sans';\r\n    padding: 1rem 2rem;\r\n    border-radius: 10px;\r\n    background-color: rgba(73, 61, 95, 0.747);\r\n    border: 3px solid black;\r\n}\r\nform{\r\n    font-family: 'Open Sans';\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    font-size: 1.5rem;\r\n    border: 3px solid black;\r\n    padding: 3rem 2rem;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    gap: 10px;\r\n}\r\nform input{\r\n    min-width: 300px;\r\n    max-width: 600px;\r\n    height:3rem;\r\n    border-radius:10px ;\r\n    font-size: 1.5rem;\r\n}\r\n.red{\r\n    background-color: rgb(187, 38, 38);\r\n    z-index: 2;\r\n}\r\n\r\n.yellow{\r\n    background-color: rgb(212, 212, 60);\r\n}\r\n\r\n.green{\r\n    background-color: rgb(48, 112, 48);\r\n}\r\n.todo-container{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n}\r\n.todo{\r\n    font-family: 'Open Sans';\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin: 1rem;\r\n    min-width: 450px;\r\n    min-height: 160px;\r\n    padding: 3rem 2rem; \r\n    border-radius: 10%;   \r\n}\r\n.todo > :nth-child(1){\r\n    margin-bottom: 20px;\r\n    font-size: 3rem;\r\n}\r\n.hidden{\r\n    width:0;\r\n    height:0;\r\n    display: none;\r\n}\r\n.create-todo{\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n}\r\n.cancel-todo{\r\n    position:absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n}\r\n.cancel-project{\r\n    position:absolute;\r\n    top: 5px;\r\n    right: 20px;\r\n}\r\n.create-project{\r\n    margin-top: 1rem;\r\n    height: 300px;\r\n}\r\n.create-project-button{\r\n    margin-top: 1rem;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;;AAEd;AACA;;IAEI,sBAAsB;AAC1B;AACA;IACI,wBAAwB;IACxB,iBAAiB;IACjB,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,UAAU;AACd;;AAEA;IACI,uBAAuB;AAC3B;AACA;IACI,wBAAwB;IACxB,kBAAkB;IAClB,mBAAmB;IACnB,yCAAyC;IACzC,uBAAuB;AAC3B;AACA;IACI,wBAAwB;IACxB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;IACtB,iBAAiB;IACjB,uBAAuB;IACvB,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,SAAS;AACb;AACA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,WAAW;IACX,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,kCAAkC;IAClC,UAAU;AACd;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,kCAAkC;AACtC;AACA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,wBAAwB;IACxB,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;AACtB;AACA;IACI,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,OAAO;IACP,QAAQ;IACR,aAAa;AACjB;AACA;IACI,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB;AAC1B;AACA;IACI,iBAAiB;IACjB,SAAS;IACT,WAAW;AACf;AACA;IACI,iBAAiB;IACjB,QAAQ;IACR,WAAW;AACf;AACA;IACI,gBAAgB;IAChB,aAAa;AACjB;AACA;IACI,gBAAgB;AACpB",sourcesContent:["*,*::before,*::after{\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    \r\n}\r\nbody{\r\n    \r\n    background-color: #ccc;\r\n}\r\n.project-container{\r\n    font-family: 'Open Sans';\r\n    font-size: 2.5rem;\r\n    margin-top: 1.5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 3rem;\r\n    flex-direction: column;\r\n    text-align: center;\r\n}\r\n\r\n#project-list{\r\n    display:flex;\r\n    gap: 10rem;\r\n}\r\n\r\n.selected{\r\n    background-color: green;\r\n}\r\nbutton{\r\n    font-family: 'Open Sans';\r\n    padding: 1rem 2rem;\r\n    border-radius: 10px;\r\n    background-color: rgba(73, 61, 95, 0.747);\r\n    border: 3px solid black;\r\n}\r\nform{\r\n    font-family: 'Open Sans';\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    font-size: 1.5rem;\r\n    border: 3px solid black;\r\n    padding: 3rem 2rem;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    gap: 10px;\r\n}\r\nform input{\r\n    min-width: 300px;\r\n    max-width: 600px;\r\n    height:3rem;\r\n    border-radius:10px ;\r\n    font-size: 1.5rem;\r\n}\r\n.red{\r\n    background-color: rgb(187, 38, 38);\r\n    z-index: 2;\r\n}\r\n\r\n.yellow{\r\n    background-color: rgb(212, 212, 60);\r\n}\r\n\r\n.green{\r\n    background-color: rgb(48, 112, 48);\r\n}\r\n.todo-container{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n}\r\n.todo{\r\n    font-family: 'Open Sans';\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin: 1rem;\r\n    min-width: 450px;\r\n    min-height: 160px;\r\n    padding: 3rem 2rem; \r\n    border-radius: 10%;   \r\n}\r\n.todo > :nth-child(1){\r\n    margin-bottom: 20px;\r\n    font-size: 3rem;\r\n}\r\n.hidden{\r\n    width:0;\r\n    height:0;\r\n    display: none;\r\n}\r\n.create-todo{\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n}\r\n.cancel-todo{\r\n    position:absolute;\r\n    top: 20px;\r\n    right: 20px;\r\n}\r\n.cancel-project{\r\n    position:absolute;\r\n    top: 5px;\r\n    right: 20px;\r\n}\r\n.create-project{\r\n    margin-top: 1rem;\r\n    height: 300px;\r\n}\r\n.create-project-button{\r\n    margin-top: 1rem;\r\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&o[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,o=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,i=[],a=!0,c=!1;try{for(t=t.call(e);!(a=(r=t.next()).done)&&(i.push(r.value),!n||i.length!==n);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==t.return||t.return()}finally{if(c)throw o}}return i}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if(!a)return i;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(s," */"),l=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(l).concat([d]).join("\n")}return[i].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=i[d]||0,A="".concat(d," ").concat(l);i[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(n[u].references++,n[u].updater(p)):n.push({identifier:A,updater:o(p,r),references:1}),a.push(A)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=r(e,o),d=0;d<i.length;d++){var l=t(i[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r=t.css,o=t.media,i=t.sourceMap;o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),s=t.n(c),d=t(216),l=t.n(d),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=document.querySelector(".project-container"),h=document.querySelector(".todo-container"),C=document.querySelector(".create-todo"),B=window.localStorage;class g{constructor(e,n,t,r,o,i,a){this.title=e,this.description=n,this.creationDate=t,this.dueDate=r,this.priority=o,this.status=i,this.project=a}changeStatus(){this.status=!this.status}}class b{constructor(e,n,t){this.name=e,this.todosList=n,this.selected=t}select(){this.selected=!0,k(),j()}deSelect(){this.selected=!1}}const x=new g("Title","desc",new Date,"Monday 10th","2",!0,"default"),I=new g("Title1","desc1",new Date,"Tuesday 11th","5",!1,"secondList"),y=new g("Title2","desc1",new Date,"Tuesday 11th","8",!1,"thirdList");let v=[new b("default",[x],!0),new b("secondProject",[I,x,x],!1),new b("thirdProject",[y],!1)],E=JSON.parse(B.getItem("projectList")),L=[];null===E||E.forEach((e=>{let n=new b(e.name,e.todosList,e.selected);L.push(n)})),v=L,console.log(v);const j=()=>{v.forEach((e=>{!0===e.selected&&e.todosList.forEach((n=>{const t=document.createElement("ul"),r=document.createElement("h2"),o=document.createElement("h3"),i=document.createElement("h3"),a=document.createElement("h3"),c=document.createElement("h3"),s=document.createElement("h3"),d=document.createElement("button");d.innerHTML='<i class="fas fa-trash"></i>',d.addEventListener("click",(()=>{T(),w(e,n)})),r.innerText=n.title,t.addEventListener("mouseenter",(()=>{o.innerText=n.description,a.innerText=n.dueDate,i.innerText=`Date todo created: ${n.creationDate}`})),t.addEventListener("mouseleave",(()=>{o.innerText="",a.innerText="",i.innerText=""})),!1===n.status?s.innerHTML='Todo Status: Incomplete <i class="fas fa-times-circle"></i>':s.innerHTML='Todo Status: Complete <i class="fas fa-check-square"></i>',s.addEventListener("click",(()=>{n.changeStatus(),k(),j()})),n.priority<=3?(t.classList.add("red"),c.innerText=`The priority is high, set to ${n.priority}`):n.priority>4&&n.priority<7?(t.classList.add("yellow"),c.innerText=`The priority is medium, set to ${n.priority}`):n.priority>=8&&(t.classList.add("green"),c.innerText=`The priority is low, set to ${n.priority}`),t.classList.add("todo"),t.appendChild(r),t.appendChild(o),t.appendChild(i),t.appendChild(a),t.appendChild(c),t.appendChild(s),t.appendChild(d),h.appendChild(t)}))}))};j();const T=()=>{document.querySelector(".todo").remove()},w=(e,n)=>{if(console.log(n),console.log(e),e.todosList.includes(n)){let t=e.todosList.indexOf(n);e.todosList.splice(t,1),k(),j(),B.setItem("projectList",JSON.stringify(v))}},k=()=>{h.innerHTML=""},S=()=>{f.innerHTML="";let e=1;const n=document.createElement("ul");n.classList.add("project-list");const t=document.createElement("button");t.innerText="Show Projects List",n.appendChild(t),f.appendChild(n),t.addEventListener("click",(()=>{t.innerText="Hide Projects List",e%2==1?(console.log(e),e++,v.forEach((e=>{const t=document.createElement("h2");t.classList.add("project"),t.innerText=e.name,n.appendChild(t)}))):(S(),O(),z())}))};S();const O=()=>{const e=document.querySelector(".project-list");e.addEventListener("click",(n=>{e.childNodes.forEach((e=>{e.classList.remove("selected")})),"H2"===n.target.nodeName&&n.target.classList.add("selected"),P(n.target.innerText),M(n.target.innerText)}))};O();const M=e=>{v.forEach((n=>{e===n.name?n.select():e!==n.name&&n.deSelect()}))},P=e=>{v.forEach((n=>{e!==n.name&&n.deSelect()}))},z=()=>{const e=document.createElement("button");e.innerText="Create a new Project!",e.classList.add("create-project-button"),e.addEventListener("click",(()=>{const e=document.createElement("form");e.classList.add("create-project"),h.classList.add("hidden");const n=document.createElement("input"),t=document.createElement("label"),r=document.createElement("button"),o=document.createElement("button");t.htmlFor="name",t.innerText="Please enter a name for your project \n",n.name="name",r.innerText="Submit",o.innerHTML='<i class="fas fa-trash"></i>',o.classList.add("cancel-project"),o.addEventListener("click",(n=>{n.preventDefault(),e.remove(),h.classList.remove("hidden")})),e.appendChild(t),e.appendChild(n),e.appendChild(r),e.appendChild(o),f.appendChild(e),r.addEventListener("click",(t=>{t.preventDefault(),D(n.value),e.remove(),h.classList.remove("hidden")}))})),f.appendChild(e)};z();const D=e=>{const n=new b(e,[],!1);v.push(n),console.log(v),S(),O(),z(),B.setItem("projectList",JSON.stringify(v))};(()=>{const e=document.createElement("button");e.innerText="Add a new todo!",e.addEventListener("click",(()=>{e.classList.add("hidden"),h.classList.add("hidden");const n=document.createElement("form"),t=document.createElement("input"),r=document.createElement("label");r.innerText="Please enter a title for the todo";const o=document.createElement("input"),i=document.createElement("label");i.innerText="Please enter a description of the todo";const a=document.createElement("input");a.type="date";const c=document.createElement("label");c.innerText="Please enter the due date of the todo";const s=document.createElement("input");s.type="range",s.min="1",s.max="10";const d=document.createElement("label");d.innerText="Please enter the priority of the todo from 1 to 10, 1 being most important with 10 being least important";const l=document.createElement("input"),A=document.createElement("label");A.innerText="Please enter the name of the project for the todo to go on ",v.forEach((e=>{e.selected&&(l.value=e.name)}));const u=document.createElement("button");u.innerText="Submit new Todo!",u.addEventListener("click",(r=>{r.preventDefault(),e.classList.remove("hidden"),U(t.value,o.value,a.valueAsDate,s.value,l.value),C.removeChild(n),h.classList.remove("hidden"),k(),j()}));const p=document.createElement("button");p.innerHTML='<i class="fas fa-trash"></i>',p.classList.add("cancel-todo"),p.addEventListener("click",(t=>{t.preventDefault(),e.classList.remove("hidden"),n.remove(),h.classList.remove("hidden")})),n.appendChild(r),n.appendChild(t),n.appendChild(i),n.appendChild(o),n.appendChild(c),n.appendChild(a),n.appendChild(d),n.appendChild(s),n.appendChild(A),n.appendChild(l),n.appendChild(u),n.appendChild(p),C.appendChild(n)})),C.appendChild(e)})();const U=(e,n,t,r,o)=>{const i=new g(e,n,new Date,t,r,!1,o);v.forEach((e=>{e.name===o&&e.todosList.push(i)})),B.setItem("projectList",JSON.stringify(v)),console.log(v),k(),j()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,